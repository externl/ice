name: Build Ice

inputs:
  working_directory:
    description: "The working directory to run the build in"
    default: "."
    type: string

  build_flags:
    description: "Additional flags to pass to the build"
    default: ""
    type: string

  msbuild_project:
    description: "The project file to build"
    default: "ice.proj"
    type: string

  build_cpp_and_python:
    description: "Build C++ and Python"
    type: choice
    default: "false"
    options:
      - true
      - false

runs:
  using: "composite"
  steps:
    # macOS and Linux
    - name: Build C++ and Python
      run: |
        make -C cpp srcs
        make -C python
      shell: bash
      if: (runner.os == 'macOS' || runner.os == 'Linux') && inputs.build_cpp_and_python == 'true'
    - name: Build
      working-directory: ${{ inputs.working_directory }}
      run: make ${{ inputs.build_flags }}
      shell: bash
      if: runner.os == 'macOS' || runner.os == 'Linux'

    # Windows
    - name: Build C++ and Python
      run: |
        msbuild /m /graph  /reportfileaccesses ${{ inputs.build_flags }} -t:restore -p:RestorePackagesConfig=true cpp/msbuild/ice.sln
        msbuild /m /graph /reportfileaccess ${{ inputs.build_flags }} /t:build cpp/msbuild/ice.sln
        msbuild /m ${{ inputs.build_flags }} python/msbuild/ice.proj
      shell: powershell
      if: runner.os == 'Windows' && inputs.build_cpp_and_python == 'true'

    - name: Build
      working-directory: ${{ inputs.working_directory }}
      run: |
        msbuild /m ${{ inputs.build_flags }} ${{ inputs.msbuild_project }}
      shell: powershell
      if: runner.os == 'Windows'
